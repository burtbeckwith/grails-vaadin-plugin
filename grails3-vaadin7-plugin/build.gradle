buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "0.1-SNAPSHOT"
group "org.grails.plugins"

//apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Angel.SR3"
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

//configurations {
//    compile.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//}
configurations {
    all*.exclude group: 'ch.qos.logback', module: 'logback-classic'
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-data-mongodb'
}

dependencies {
    compile gradleApi()
    compile localGroovy()

    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"
    provided 'javax.servlet:javax.servlet-api:3.1.0'

    provided 'javax.validation:validation-api:1.1.0.Final'

    testCompile "org.grails:grails-plugin-testing"

    console "org.grails:grails-console"

    String vaadinVersion = "7.6.3"
    compile "com.vaadin:vaadin-server:${vaadinVersion}"
    compile "com.vaadin:vaadin-client-compiled:${vaadinVersion}"
    compile "com.vaadin:vaadin-client:${vaadinVersion}"
    compile "com.vaadin:vaadin-client-compiler:${vaadinVersion}"
    compile "com.vaadin:vaadin-themes:${vaadinVersion}"
    // compile "com.vaadin:vaadin-theme-compiler:${vaadinVersion}"
    compile "com.vaadin:vaadin-push:${vaadinVersion}"

    [
        "org.springframework:spring-context",
        "org.springframework.boot:spring-boot-starter-web",
        "org.springframework.boot:spring-boot-starter-data-mongodb",
    ].each { dep ->
        compile(dep) {
            exclude module: "spring-boot-starter-logging"
            exclude module: "logback-classic"
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

grailsPublish {
    // TODO: Provide values here
    user = 'user'
    key = 'key'
    githubSlug = 'foo/bar'
    license {
        name = 'Apache-2.0'
    }
    title = "My Plugin"
    desc = "Full plugin description"
    developers = [johndoe: "John Doe"]
    portalUser = ""
    portalPassword = ""
}

idea {
    module {
        downloadJavadoc = false
        downloadSources = false
    }
}